
//
// const arr1 = [1, 2, 3]
// const arr2 = arr1
// console.log(arr2 === arr1)
// const arr3 = new Array([1,2])

// arr.indexOf(1)
// const arr2 = [1, 2, 4]
// const arr3 = arr
// const newArr = arr.slice()

// newArr.push(123)
// let prim = 1
// let prim2 = 1
// let prim3 = prim
// prim = 2
// arr.push(3)
// console.log(arr)

// arr.unshift(5)
// console.log(arr3)
// prim = 2
// console.log(prim3)
// const arr3 = arr
// arr.splice(2, 1, 5)
// console.log(arr)
// const value = 2
// switch(value){
//     case 1:
//         console.log("1")
//         break;
//     case 2:
//         console.log("1")
//         break
// }

// for(let i= 0; 1 < 10; i++){
//     continue
// }
// # Модуль 1. Занятие 2. Ветвления. Циклы
// ## Example 1 - Ввод пользователя и ветвления

// Используя конструкцию if..else и prompt, напиши код, который будет спрашивать:
// `"Какое официальное название JavaScript?"`. Если пользователь вводит
// `ECMAScript`, то показывай alert со строкой `"Верно!"`, в противном случае -
// `"Не знаете? ECMAScript!"`

// спросить Какое официальное название JavaScript?
// получить input
// сравнить
// вывести строку
// const QUESTION = 'Какое официальное название JavaScript?'
// const answer = prompt('Какое официальное название JavaScript?')

// if (answer == 'ECMASript'){
//     alert('Верно')
// } else {
//     alert('Не знаете? ECMAScript')
// }

// ## Example 2 - Отображение времени (if...else)

// Напиши скрипт для отображения часов и минут в консоли браузера в виде строки
// формата `"14 ч. 26 мин."`. Если значение переменной `minutes` равно `0`, то
// выводи строку `"14 ч."`, без минут.

// ```js
// const hours = 14;
// const minutes = 0;
// let message;

// if (minutes === 0) {
//   message = `${hours} ч.`;
// } else {
//   message = `${hours} ч. ${minutes} мин.`;
// }
// console.log(message);

// ```

// ## Example 3 - Ветвеления

// Напиши скрипт, который выводит в консоль строку `"Это положительное число"`,
// если в prompt пользователь ввел число больше нуля. Если был введен ноль, выводи
// в консоль строку `"Это ноль"`. Если передали отрицательное число, в консоли
// должна быть строка `"Это отрицательное число"`.

// ```js
// const userInput = prompt('Введите число');
// const formattedInput = Number(userInput)
// let message;
// // console.log(formattedInput)
// if (formattedInput > 0) {
//   message = 'Это положительное число';
// } else if (userInput === null){
//   message = 'Вы ничего не ввели';
// } else if (formattedInput === 0 && userInput.replaceAll(' ', '')) {
//   message = 'Это ноль';
// } else if (formattedInput < 0) {
//   message = 'Это отрицательное число';1
// } else {
//   message = 'Не валидно';
// }
// console.log(message);

// получить ввод0
// сравнить
// вывести сообщение

// ```

// ## Example 4 - Вложенные ветвления

// Напиши скрипт, который сравнивает числа в переменных `a` и `b`. Если оба
// значения больше `100`, то выведи в консоль максимальное из них. В противном
// случае в консоли должна быть сумма значения `b` и числа 512.

// ```js
// const a = 181;
// const b = 180;

// if ((a > 100 ) && (b > 100)) {
//     const max = (a > b) ? a : b
//     console.log(max)
// } else {
//     console.log(b + 512)
// }
// ```
// сравнение 
// если оба больше 100, то выводим максимально
// в противном слуае выводим Б и 512


// ## Example 5 - Форматирование ссылки (endsWith)

// Напиши скрипт который проверяет заканчивается ли значение переменной `link`
// символом `/`. Если нет, добавь в конец значения `link` этот символ. Используй

// конструкцию `if...else`.
// проверить последний символ
// сравниваем с /
// если не заканчивается добавить /
// ```js
// let link = 'http';
// let lastIndex = link.length - 1
// let lastLetter = link[lastIndex]
// if (!(lastLetter === '/')) {
//     link = `${link}/`
// }


// Пиши код ниже этой строки

// Пиши код выше этой строки
// console.log(link);
// ```

// группа

// ## Example 6 - Форматирование ссылки (includes и логическое «И»)

// Напиши скрипт который проверяет заканчивается ли значение переменной `link`
// символом `/`. Если нет, добавь в конец значения `link` этот символ, но только в
// том случае, если в `link` есть подстрока `"my-site"`. Используй конструкцию
// `if...else`.

// ```js
// let link = 'https://somesite.com/my-site/about/';
// // Пиши код ниже этой строки
// let lastLetter = link.at(-1)
// if (!(lastLetter === '/') && link.includes('my-site')) {
//     link = `${link}/`
// }
// // Пиши код выше этой строки
// console.log(link);
// ```

// ## Example 7 - Форматирование ссылки (тернарный оператор)

// Выполни рефакторинг кода задачи номер 4 используя тернарный оператор.
// ```js

// console.log(link);
// ```

// ## Example 8 - if...else и логические операторы

// Напиши скрипт который будет выводить в консоль браузера строку в зависимости от
// значения переменной `hours`.

// Если значение переменной `hours`:

// - меньше `17`, выводи строку `"Pending"`
// - больше либо равно `17` и меньше либо равно 24, выводи строку `"Expires"`
// - больше `24` , выводи строку `"Overdue"`

// ```js
// const hours = -5;
// let message = ''

// if (hours < 17 && hours > 0) {
//   message = 'Pending'
// } else if (hours >= 17 && hours <= 24){
//   message = 'Expires'
// } else if (hours > 24) {
//   message = 'Overdue'
// } else {
//   message = 'HZ'
// }

// console.log(message)

// ```

// ## Example 9 - Дедлайн сдачи проекта (if...else)

// Напиши скрипт для отображения времени дедлайна сдачи проекта. Используй
// конструкцию `if...else`.

// - Eсли до дедлайна 0 дней - выведи строку `"Сегодня"`
// - Eсли до дедлайна 1 день - выведи строку `"Завтра"`
// - Eсли до дедлайна 2 дня - выведи строку `"Послезавтра"`
// - Eсли до дедлайна 3+ дней - выведи строку `"Дата в будущем"`

// const daysUntilDeadline = '2';
// let message = '';

// switch (daysUntilDeadline){
//   case 0:
//     message = 'Сегодня'
//     break
//   case 1:
//     message = 'Завтра'
//     break
//   case 2:
//     message = 'Послезавтра'
//     break
//   default: 
//   message = 'Дата в будущем'
// }
// console.log(message);

// ```js
// 
// // Пиши код ниже этой строки
// ```

// ## Example 10 - Дедлайн сдачи проекта (switch)

// Выполни рефакторинг кода задачи номер 5 используя `switch`.

// ```js
// const daysUntilDeadline = 5;


// ```

// ## Example 11 - Цикл for

// Напиши цикл for который выводит в консоль браузера числа по возрастанию от `min`
// до `max`, но только если число кратное `5`.

// ```js
// const max = 20;
// const min = 10;
// for (let index = min; index <= max; index +=1 ) {
//   if (index % 5 !== 0) continue
//   console.log(index)
// }
// ```

// ## Example 12 - Ввод пользователя и ветвления

// Напиши скрипт, который будет спрашивать логин с помощью `prompt` и логировать
// результат в консоль браузера.

// - Если посетитель вводит `"Админ"`, то `prompt` запрашивает пароль
// - Если ничего не введено или нажата клавиша Esc - вывести строку `"Отменено"`
// - В противном случае вывести строку `"Я вас не знаю"`

// Пароль проверять так:

// - Если введён пароль `"Я админ"`, то вывести строку `"Здравствуйте!"`
// - Иначе выводить строку `"Неверный пароль"`
